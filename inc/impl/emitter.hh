// COPYRIGHT (C) HARRY CLARK 2025
// LIGHTWEIGHT CODE EMITTER/GENERATOR FOR THE HITACHI SUPERH2

// THIS FILE PERTAINS TOWARDS THE ACTUAL IMPLEMENTATION SURROUNDING THE EMITTER
// THE IDEA BEHIND THIS FILE IS THAT WE WANT TO BE ABLE TO MAKE A STATICALLY TYPE COLLECTION
// OF ALL OF THE OPCODE FAMILIES AND EMIT THEM ACCORDINGLY TO THEIR UNQIUE CHARACTERISTICS

// WHAT WOULD OTHERWISE MAKE THIS ADJACENT TO AN EMULATOR IS THAT WE ARE NOT CONCERN WITH THE INTRINISC
// PATTERNS AND DESIGN OF SAID OPCODE FAMILY, MOREOVER JUST WHAT THEY REPRESENT IN MEMORY AND ANYTHING
// THAT COMES ATTACHED WITH THEM IN RUNTIME

// NESTED INCLUDES

#include <impl/buffer.hh>
#include <impl/reg.hh>
#include <impl/util.hh>

namespace maria
{
    class EMITTER
    {
        public: 
            [[nodiscard]] explicit EMITTER(UNK CAPACITY = BUFFER::SH2_DEFAULT_BUFFER);
            
            EMITTER(const EMITTER&) = delete;
            EMITTER(EMITTER&&) = default;

            ~EMITTER() noexcept;
    };
}