// COPYRIGHT (C) HARRY CLARK 2025
// LIGHTWEIGHT CODE EMITTER/GENERATOR FOR THE HITACHI SUPERH2

// THIS FILE PERTAINS TOWARDS THE ACTUAL IMPLEMENTATION SURROUNDING THE EMITTER
// THE IDEA BEHIND THIS FILE IS THAT WE WANT TO BE ABLE TO MAKE A STATICALLY TYPE COLLECTION
// OF ALL OF THE OPCODE FAMILIES AND EMIT THEM ACCORDINGLY TO THEIR UNQIUE CHARACTERISTICS

// WHAT WOULD OTHERWISE MAKE THIS ADJACENT TO AN EMULATOR IS THAT WE ARE NOT CONCERN WITH THE INTRINISC
// PATTERNS AND DESIGN OF SAID OPCODE FAMILY, MOREOVER JUST WHAT THEY REPRESENT IN MEMORY AND ANYTHING
// THAT COMES ATTACHED WITH THEM IN RUNTIME

// NESTED INCLUDES

#include <impl/buffer.hh>
#include <impl/emitter.hh>

namespace maria 
{
    EMITTER::EMITTER(UNK CAPACITY) : _BUFFER(CAPACITY) {}

    EMITTER::~EMITTER() = default;

    BUFFER& EMITTER::GET_BUFFER() noexcept { return _BUFFER; }
    
    void EMITTER::SH2_ADD(GP_REGISTER RD, GP_REGISTER RS) noexcept
    {
        U16 OPCODE = 0x300C | (RD.GET_INDEX() << 8) | (RS.GET_INDEX() << 4);
        _BUFFER.SH2_EMIT_WORD(OPCODE);
    }
}