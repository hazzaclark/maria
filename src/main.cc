// COPYRIGHT (C) HARRY CLARK 2025
// LIGHTWEIGHT CODE EMITTER/GENERATOR FOR THE HITACHI SUPERH2

// THE FOLLOWING FILE PERTAINS TOWARDS THE MAIN FUNCTIONALITY OF THE PROGRAM
// USE THIS FILE MORE SO AS A TESTING SUITE SHOULD IT BE APPLICABLE TO YOU

// EMITTER AND BUFFER OBJECTS ARE PROVIDED, IT IS JUST A CASE OF TESTING THE
// WATERS TO DETERMINE IF THE CORRECT INFORMATION IS EMITTED AS PER EACH OPCODE DEF

#include <impl/emitter.hh>
#include <impl/reg.hh>
#include <cstdio>

using namespace maria;

int main(void)
{
    EMITTER EMITTER;
    GP_REGISTER R0(0);
    GP_REGISTER R1(1);
    GP_REGISTER R2(2);

    MACH MACH;
    
    EMITTER.SH2_ADD(R0, R0);
    EMITTER.SH2_BRA(0);
    EMITTER.SH2_BSR(0);

    EMITTER.SH2_STS_MACH(MACH, R0);
    
    BUFFER& BUFFER = EMITTER.GET_BUFFER();
    U16* CODE_PTR = reinterpret_cast<U16*>(BUFFER.SH2_GET_BUFFER());

    printf("EMITTED OPCODE MASK FROM: (ADD R0, R0) -> 0x%04X\n", CODE_PTR[0]);
    printf("EMITTED OPCODE MASK FROM: (BRA 0) -> 0x%04X\n", CODE_PTR[1]);
    printf("EMITTED OPCODE MASK FROM: (BSR 0) -> 0x%04X\n", CODE_PTR[2]);
    printf("EMITTED OPCODE MASK FROM: (MACH R0) -> 0x%04X\n", CODE_PTR[3]);
    
    return 0;
}
